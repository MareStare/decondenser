name: ci
on:
  push:
    branches: [main]
  pull_request:

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings
  RUSTDOCFLAGS: --deny warnings
  # This disables incremental compilation for workspace packages and path deps.
  CARGO_INCREMENTAL: 0

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/amredev/devcontainer-decondenser:1.14.0
      options: --user 0

    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run --workspace decondenser-vscode lint
      - run: npm run --workspace decondenser-vscode build

  cargo-lock:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # There is a pre-installed cargo in the Github Managed runner image
      # which is totally fine for simple `cargo fetch` usage.
      - run: cargo +stable fetch

      # Manually validate that Cargo.lock is not changed by cargo fetch
      # We do this manually because `cargo fetch --locked` doesn't show
      # the diff that it wants to apply to Cargo.lock and so it may not
      # be obvious what's going on. For example, there may be a tricky
      # scenario when `Cargo.lock` is up-to-date on the current branch,
      # but when rebased on `master` it is out-of-date because.
      - name: Validate Cargo.lock is up-to-date
        run: >-
          git diff --exit-code --color=always || ( echo "Cargo.lock is
          out-of-date. See the diff above. Try rebasing on master" && exit 1 )

  cargo-fmt:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/amredev/devcontainer-decondenser:1.14.0
      options: --user 0

    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --all -- --check

  cargo-doc:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/amredev/devcontainer-decondenser:1.14.0
      options: --user 0

    steps:
      - uses: actions/checkout@v4
      - run: cargo doc --no-deps

  test-stable:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/amredev/devcontainer-decondenser:1.14.0
      options: --user 0

    continue-on-error: ${{ matrix.locked == '' }}

    strategy:
      fail-fast: false
      matrix:
        locked: [--locked, ""]

    steps:
      - uses: actions/checkout@v4
      - run: cargo clippy ${{ matrix.locked }} --all-features --all-targets
      - run: cargo test ${{ matrix.locked }} --all-features --all-targets
      - run: cargo test ${{ matrix.locked }} --all-features --doc
